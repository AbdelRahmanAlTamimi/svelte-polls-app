{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Header.svelte",
    "../../Footer.svelte",
    "../../Tabs.svelte",
    "../../PollList.svelte",
    "../../CreatePollForm.svelte",
    "../../PollDetails.svelte",
    "../../Button.svelte",
    "../../Card.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Header from './components/Header.svelte';\n\timport Footer from './components/Footer.svelte';\n\timport CreatePollForm from './components/CreatePollForm.svelte';\n\timport PollList from './components/PollList.svelte';\n  import Tabs from './shared/Tabs.svelte';\n  \n  // tabs\n  let items = ['Current Polls', 'Add New Poll'];\n  let activeItem = 'Current Polls';\n  const tabChange = (e) => activeItem = e.detail;\n\n  const handleAdd = () => {\n    activeItem = 'Current Polls';\n  }\n\n</script>\n\n<Header />\n<main>\n  <Tabs {activeItem} {items} on:tabChange={tabChange} />\n  {#if activeItem === 'Current Polls'}\n    <PollList />\n  {:else if activeItem === 'Add New Poll'}\n    <CreatePollForm on:add={handleAdd} />\n  {/if}\n</main>\n<Footer />\n\n<style>\n\tmain{\n    width: 100%;\n    max-width: 960px;\n    margin: 40px auto;\n  }\n</style>",
    "<header>\n  <h1>\n    <img src=\"/img/poll_ninja_logo.svg\" alt=\"Poll Ninja Logo\">\n  </h1>\n</header>\n\n<style>\n  header{\n    background: #f7f7f7;\n    padding: 20px;\n  }\n  h1{\n    margin: 0;\n    text-align: center;\n  }\n  img{\n    max-width: 180px;\n  }\n</style>",
    "<footer>\n  <div class=\"copyright\">Copyright 2020 Poll Ninja</div>\n</footer>\n\n<style>\n  footer{\n    padding: 40px;\n    text-align: center;\n  }\n  .copyright{\n    color: #aaa;\n    font-size: 14px;\n    display: inline-block;\n    padding: 20px;\n    border-top: 1px solid #ddd;\n  }\n</style>",
    "<script>\n\n  import { createEventDispatcher } from 'svelte';\n  let dispatch = createEventDispatcher();\n  \n  export let items;\n  export let activeItem;\n\n</script>\n\n<div class=\"tabs\">\n  <ul>\n    {#each items as item}\n      <li on:click={() => dispatch('tabChange', item)}>\n        <div class:active={item === activeItem}>{ item }</div>\n      </li>\n    {/each}\n  </ul>\n</div>\n\n<style>\n  .tabs{\n    margin-bottom: 40px;\n  }\n  ul{\n    display: flex;\n    justify-content: center;\n    padding: 0;\n    list-style-type: none;\n  }\n  li{\n    margin: 0 16px;\n    font-size: 18px;\n    color: #555;\n    cursor: pointer;\n  }\n  .active{\n    color: #d91b42;\n    border-bottom: 2px solid #d91b42;\n    padding-bottom: 8px;\n  }\n</style>",
    "<script>\n  import { fade, slide, scale } from 'svelte/transition';\n  import { flip } from 'svelte/animate';\n  import PollStore from '../stores/pollStore.js';\n  import PollDetails from './PollDetails.svelte';\n</script>\n\n<div class=\"poll-list\">\n  {#each $PollStore as poll (poll.id)}  \n    <div in:fade out:scale|local animate:flip={{duration: 500}}>\n      <PollDetails {poll} />\n    </div>\n  {/each}\n</div>\n\n<style>\n  .poll-list{\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 20px;\n  }\n</style>",
    "<script>\n  import PollStore from '../stores/pollStore.js';\n  import { createEventDispatcher } from 'svelte';\n  import Button from '../shared/Button.svelte';\n\n  let dispatch = createEventDispatcher();\n  let fields = { question: '', answerA: '', answerB: '' };\n  let errors = { question: '', answerA: '', answerB: '' };\n  let valid = false;\n\n  const submitHandler = () => {\n    valid = true;\n    // question\n    if (fields.question.trim().length < 5) {\n      valid = false;\n      errors.question = 'Question must be at least 5 chars long'\n    } else {\n      errors.question = ''\n    }\n    // answer A\n    if (fields.answerA.trim().length < 1) {\n      valid = false;\n      errors.answerA = 'Answer A cannot be empty'\n    } else {\n      errors.answerA = ''\n    }\n    // answer B\n    if (fields.answerB.trim().length < 1) {\n      valid = false;\n      errors.answerB = 'Answer B cannot be empty'\n    } else {\n      errors.answerB = ''\n    }\n    // add new poll\n    if (valid) {\n      let poll = {...fields, id: Math.random(), votesA: 0, votesB: 0};\n      // save poll to store\n      PollStore.update(currentPolls => {\n        return [poll, ...currentPolls];\n      });\n      dispatch('add');\n    }\n  }\n</script>\n\n<form on:submit|preventDefault={submitHandler}>\n  <div class=\"form-field\">\n    <label for=\"question\">Poll Question:</label>\n    <input type=\"text\" id=\"question\" bind:value={fields.question}>\n    <div class=\"error\">{ errors.question }</div>\n  </div>\n  <div class=\"form-field\">\n    <label for=\"answer-a\">Answer A value:</label>\n    <input type=\"text\" id=\"answer-a\" bind:value={fields.answerA}>\n    <div class=\"error\">{ errors.answerA }</div>\n  </div>\n  <div class=\"form-field\">\n    <label for=\"answer-b\">Answer B value:</label>\n    <input type=\"text\" id=\"answer-b\" bind:value={fields.answerB}>\n    <div class=\"error\">{ errors.answerB }</div>\n  </div>\n  <Button>Add Poll</Button>\n</form>\n\n<style>\n  form{\n    width: 400px;\n    margin: 0 auto;\n    text-align: center;\n  }\n  .form-field{\n    margin: 18px auto;\n  }\n  input{\n    width: 100%;\n    border-radius: 6px;\n  }\n  label{\n    margin: 10px auto;\n    text-align: left;\n  }\n  .error{\n    font-weight: bold;\n    font-size: 12px;\n    color: #d91b42;\n  }\n</style>",
    "<script>\n  import PollStore from '../stores/pollStore.js';\n  import Card from '../shared/Card.svelte';\n  import Button from '../shared/Button.svelte';\n  import { tweened } from 'svelte/motion';\n\n  export let poll;\n\n  // reactive values\n  $: totalVotes = poll.votesA + poll.votesB;\n  $: percentA = Math.floor(100 / totalVotes * poll.votesA) || 0;\n  $: percentB = Math.floor(100 / totalVotes * poll.votesB) || 0;\n\n  // tweened percentages\n  const tweenedA = tweened(0);\n  const tweenedB = tweened(0);\n  $: tweenedA.set(percentA);\n  $: tweenedB.set(percentB);\n  $: console.log($tweenedA, $tweenedB);\n\n  // handling votes\n  const handleVote = (option, id) => {\n    PollStore.update(currentPolls => {\n\n      let copiedPolls = [...currentPolls];\n      let upvotedPoll = copiedPolls.find(poll => poll.id == id);\n\n      if(option === 'a'){\n        upvotedPoll.votesA++;\n      }\n      if(option === 'b'){\n        upvotedPoll.votesB++;\n      }\n\n      return copiedPolls;\n    });\n  };\n\n  // deleting a poll\n  const handleDelete = (id) => {\n    PollStore.update(polls => {\n      return polls.filter(poll => poll.id != id);\n    });\n  };\n</script>\n\n<Card>\n  <div class=\"poll\">\n    <h3>{ poll.question }</h3>\n    <p>Total votes: { totalVotes }</p>\n    <div class=\"answer\" on:click={() => handleVote('a', poll.id)}>\n      <div class=\"percent percent-a\" style=\"width: {$tweenedA}%\"></div>\n      <span>{ poll.answerA } ({ poll.votesA } votes)</span>\n    </div>\n    <div class=\"answer\" on:click={() => handleVote('b', poll.id)}>\n      <div class=\"percent percent-b\" style=\"width: {$tweenedB}%\"></div>\n      <span>{ poll.answerB } ({ poll.votesB } votes)</span>\n    </div>\n    <div class=\"delete\">\n      <Button flat={true} on:click={() => handleDelete(poll.id)}>Delete</Button>\n    </div>\n  </div>\n</Card>\n\n<style>\n  h3{\n    margin: 0 auto;\n    color: #555;\n  }\n  p{\n    margin-top: 6px;\n    font-size: 14px;\n    color: #aaa;\n    margin-bottom: 30px;\n  }\n  .answer{\n    background: #fafafa;\n    cursor: pointer;\n    margin: 10px auto;\n    position: relative;\n  }\n  .answer:hover{\n    opacity: 0.6;\n  }\n  span{\n    display: inline-block;\n    padding: 10px 20px;\n  }\n  .percent{\n    height: 100%;\n    position: absolute;\n    box-sizing: border-box;\n  }\n  .percent-a{\n    background: rgba(217,27,66,0.2);\n    border-left: 4px solid #d91b42;\n  }\n  .percent-b{\n    background: rgba(69,196,150,0.2);\n    border-left: 4px solid #45c496;\n  }\n  .delete{\n    margin-top: 30px;\n    text-align: center;\n  }\n</style>",
    "<script>\n  export let type = 'primary';\n  export let flat = false;\n  export let inverse = false;\n</script>\n\n<button class:flat={flat} class:inverse={inverse} class={type} on:click>\n  <slot></slot>\n</button>\n\n<style>\n  button{\n    border: 0;\n    cursor: pointer;\n    border-radius: 6px;\n    padding: 8px 12px;\n    font-weight: bold;\n    box-shadow: 1px 2px 3px rgba(0,0,0,0.2);\n  }\n  .flat{\n    box-shadow: none;\n  }\n  .primary{\n    background: #d91b42;\n    color: white;\n  }\n  .secondary{\n    background: #45c496;\n    color: white;\n  }\n  .primary.inverse{\n    color: #d91b42;\n    background: white;\n    border: 2px solid #d91b42;\n  }\n  .secondary.inverse{\n    color: #45c496;\n    background: white;\n    border: 2px solid #45c496;\n  }\n</style>",
    "<div class=\"card\">\n  <slot></slot>\n</div>\n\n<style>\n  .card{\n    background: #fff;\n    padding: 20px;\n    border-radius: 6px;\n    box-shadow: 0px 2px 4px rgba(0,0,0,0.1);\n  }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}